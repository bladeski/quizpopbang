---
import TeamLayout from '../../layouts/TeamLayout.astro';
import { Team } from '../../types';
import {GET as GetQuiz} from '../api/quiz';
import {GET as GetTeam} from '../api/team/[id]';
import { GET as GetTeams } from '../api/teams';

const quizName = (await ((await GetQuiz(Astro)).json())).message.name;
const team = (await ((await GetTeam(Astro)).json())).message as Team;

export const getStaticPaths = (async (): Promise<{ params: { id: string } }[]> => {
  const json = await ((await GetTeams(Astro)).json());
  const teams = json.message as Team[];
  return teams
    .map(team => ({
      params: {
        id: team.id
      }
    }));
});

if (!team) {
  return Astro.redirect('/');
}

---

<TeamLayout title={team.name} subtitle=`Welcome to the ${quizName} quiz!` currentPoints={team.totalPoints}>
  {
    team ?   
    <article data-teamid={team.id}>
    </article>
    :
    <span>Sorry but this team doesn't exist!</span>
  }
  <script>
    import { q } from '../../../dist/server/chunks/astro/assets-service_g6DNmJna.mjs';
import { LinkerQuestion, MultipleChoiceQuestion, QuestionType, SimpleQuestion, TrueFalseQuestion } from '../../types/Question';
    import WsClientTeam from '../../websockets/ws-client-team.ts';

    const main = document.querySelector('article') as HTMLElement;
    const teamId = main.dataset.teamid;

    main.addEventListener('ws-join', (event) => {
      const { detail } = event as CustomEvent;
      console.log(detail);
    });

    main.addEventListener('ws-error', (event) => {
      const { detail } = event as CustomEvent;
      console.error(detail);
    });

    main.addEventListener('ws-change-round', (event) => {
      const { detail } = event as CustomEvent;
    });

    main.addEventListener('ws-change-question', (event) => {
      const { detail } = event as CustomEvent;
      const question: 
        SimpleQuestion 
        | MultipleChoiceQuestion
        | LinkerQuestion
        | TrueFalseQuestion = detail.message;
      
      console.log(question);
      const questionElement = document.createElement(question.type) as HTMLElement;
      questionElement.setAttribute('questionid', question.id.toString());
      questionElement.setAttribute('question', question.question);
      questionElement.setAttribute('imageUrl', question.imageUrl?.toString() || '');
      questionElement.setAttribute('forKids', question.forKids?.toString() || 'false');
      question.type === QuestionType.MULTIPLE_CHOICE && questionElement.setAttribute('options', question.options?.join(',') || '');
      main.appendChild(questionElement);
    });

    main.addEventListener('ws-add-points', (event) => {
      const { detail } = event as CustomEvent;
      console.log(detail);
    });

    if (teamId) {
      const ws = new WsClientTeam(teamId, main);
      
    }

    
  </script>
</TeamLayout>